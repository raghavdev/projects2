<?php

/**
 * Implements hook_rules_action_info().
 */
function ftp_rules_rules_action_info() {
  $actions = array(
    'ftp_rules_upload_file' => array(
      'label' => t('FTP Rules Upload File'),
      'group' => t('FTP'),
      'parameter' => array(
        'ftp_server' => array(
          'type' => 'text',
          'label' => 'FTP Server'
        ),
        'ftp_port' => array(
          'type' => 'text',
          'label' => 'FTP Port'
        ),
        'ftp_login' => array(
          'type' => 'text',
          'label' => 'FTP Login'
        ),
        'ftp_password' => array(
          'type' => 'text',
          'label' => 'FTP Password'
        ),
        'ftp_secure' => array(
          'type' => 'boolean',
          'label' => 'sftp?'
        ),
        'localfile' => array(
          'type' => 'text',
          'label' => 'Local file URI'
        ),
        'remote_location' => array(
          'type' => 'text',
          'label' => 'Path to place file at, just the path, no trailing /'
        ),
      ),
    ),
  );
  return $actions;
}

function ftp_rules_upload_file($ftp_server, $ftp_port, $ftp_login, $ftp_password, $ftp_secure, $localfile, $remote_location) {
  $local = drupal_realpath($localfile);

  $fileinfo = pathinfo($local);

  //process the upload of the file
  if(!$ftp_secure) {
    $connection = ftp_connect($ftp_server, $ftp_port);
    ftp_login($connection, $ftp_login, $ftp_password);

    ftp_put ($this->ftpConnection, $remote_location . '/' . $fileinfo['basename'] , $local, FTP_BINARY);

    ftp_close($connection);
  }
  else {
    //ftps requires some special libraries to use this
    //http://www.php.net/manual/en/ssh2.installation.php

    $connection = sftpConnect($ftp_server, $ftp_port, $ftp_login, $ftp_password);

    if($connection) {
      sftpUpload($connection, $remote_location, $fileinfo['basename'], $local);
    }
  }
}

function sftpConnect($ftp_server, $ftp_port, $ftp_login, $ftp_password) {

  $connection = @ssh2_connect($ftp_server, $ftp_port);
  if (!connection) {
    throw new Exception("Could not connect to $ftp_server on port $ftp_port.");
    return FALSE;
  }

  if (!@ssh2_auth_password($connection, $ftp_login, $ftp_password)) {
    throw new Exception("Could not authenticate with username $ftp_login " . "and password $ftp_password.");
    return FALSE;
  }

  $sftp = @ssh2_sftp($connection);
  if (!$sftp) {
    throw new Exception("Could not initialize SFTP subsystem.");
    return FALSE;
  }

  return $sftp;
}

function sftpUpload($sftp, $path, $filename, $localfile) {

  $stream = @fopen("ssh2.sftp://$sftp/$path/$filename", 'w');
  if (!$stream) {
    throw new Exception("Could not open remote stream.");
    return FALSE;
  }

  $data = file_get_contents($localfile);
  if (!$data) {
    throw new Exception("Could not open source file.");
    return FALSE;
  }

  if (@fwrite($stream, $data) === FALSE) {
    throw new Exception("Could not transfer file.");
    return FALSE;
  }

  @fclose($stream);
}

///**
// * Implements hook_rules_action_info().
// */
//function ftp_rules_menu() {
//  $items = array();
//
//  $items['admin/settings/ftp_rules'] = array(
//    'title' => 'FTP Rules',
//    'page callback' => 'drupal_get_form',
//    'page arguments' => array('ftp_rules_settings'),
//    'access arguments' => array('administer ftp rules settings'),
//    'type' => MENU_NORMAL_ITEM,
//  );
//
//  return $items;
//}
//
///**
// * Implements hook_permission().
// */
//function ftp_rules_permission() {
//  return array(
//    'administer ftp rules settings' => array(
//      'title' => t('administer ftp rules settings'),
//      'restrict access' => TRUE,
//    )
//  );
//}
//
//function ftp_rules_settings() {
//  $form = array();
//  $form['ftp_rules_server'] = array(
//    '#type' => 'textfield',
//    '#title' => t('FTP address'),
//    '#size' => 100,
//    '#maxlength' => 100,
//    '#description' => t("FTP address for cmp server"),
//    '#default_value' => variable_get('cmp_ftp_server'),
//    '#required' => TRUE,
//  );
//  $form['cmp_ftp_login'] = array(
//    '#type' => 'textfield',
//    '#title' => t('FTP Login'),
//    '#size' => 100,
//    '#maxlength' => 100,
//    '#description' => t("FTP login for cmp server"),
//    '#default_value' => variable_get('cmp_ftp_login'),
//    '#required' => TRUE,
//  );
//  $form['cmp_ftp_password'] = array(
//    '#type' => 'password',
//    '#title' => t('FTP Password'),
//    '#size' => 100,
//    '#maxlength' => 100,
//    '#description' => t("FTP password for cmp server"),
//    '#required' => TRUE,
//  );
//
//  $form['cmp_ftp_folder'] = array(
//    '#type' => 'textfield',
//    '#title' => t('File Folder'),
//    '#size' => 100,
//    '#maxlength' => 100,
//    '#description' => t("file folder cmp data will be placed"),
//    '#default_value' => variable_get('cmp_ftp_folder'),
//    '#required' => TRUE,
//  );
//
//  return system_settings_form($form);
//}